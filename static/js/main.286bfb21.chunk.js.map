{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","com","id","UserInfo","user","PostInfo","post","title","length","PostList","info","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"818IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCfMG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAC,GAAG,OACf,cAAC,EAAD,CAAaT,QAASS,GAAUA,EAAIC,WCJ7BC,G,MAAW,SAAC,GAAD,QAAGC,KAAQX,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAjB,OACtB,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCAQY,G,MAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOH,EAAlB,EAAkBA,KAAMT,EAAxB,EAAwBA,KAAMI,EAA9B,EAA8BA,SAA9B,OACtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,uBAECI,EAASS,OACR,cAAC,EAAD,CAAaT,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,kCCxBOU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAKV,KAAI,SAAAM,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,WCa/B,IAAMQ,EAAOC,EAAgBX,KAAI,SAAAM,GAAI,kCACvCA,GADuC,IAE1CF,MAdeF,EAcDI,EAAKM,OAbZC,EAAgBC,MAAK,SAAAV,GAAI,OAC9BA,EAAKF,KAAOA,MACR,MAYNH,UATuBgB,EASGT,EAAKJ,GARxBc,EAAmBC,QAAO,SAAAzB,GAAO,OACtCA,EAAQuB,SAAWA,MACf,QAHR,IAAyBA,EANRb,KAkBJgB,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,KAAMA,QCzBpBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.286bfb21.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(com => (\n      <CommentInfo comment={com} key={com.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    {comments.length ? (\n      <CommentList comments={comments} />\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ info }) => (\n  <div className=\"PostList\">\n    {info.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUser(id) {\n  return usersFromServer.find(user => (\n    user.id === id\n  )) || null;\n}\n\nfunction getCommentsList(postId) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === postId\n  )) || null;\n}\n\nexport const info = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getCommentsList(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList info={info} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}