{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","com","id","UserInfo","user","PostInfo","post","title","length","PostList","info","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"818IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCfFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAC,GAAG,OACf,cAAC,EAAD,CAAaT,QAASS,GAAUA,EAAIC,WCJ7BC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,SCAGW,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGa,EAAKC,QAGR,8BACG,eAED,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAIzB,mBAAGX,UAAU,iBAAb,SACGa,EAAKT,OAGR,uBAECS,EAAKP,SAASS,OAAS,EACtB,cAAC,EAAD,CAAaT,SAAUO,EAAKP,WAE5B,mBAAG,UAAQ,oBAAX,kCCxBOU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,qBAAKjB,UAAU,WAAf,SACGiB,EAAKV,KAAI,SAAAM,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,WCa/B,IAAMQ,EAAOC,EAAgBX,KAAI,SAAAM,GAAI,kCACvCA,GADuC,IAE1CF,MAdeF,EAcDI,EAAKM,OAbZC,EAAgBC,MAAK,SAAAV,GAAI,OAC9BA,EAAKF,KAAOA,MACR,MAYNH,UATuBgB,EASGT,EAAKJ,GARxBc,EAAmBC,QAAO,SAAAzB,GAAO,OACtCA,EAAQuB,SAAWA,MACf,QAHR,IAAyBA,EANRb,KAkBJgB,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUiB,KAAMA,QCzBpBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.204a6198.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(com => (\n      <CommentInfo comment={com} key={com.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <hr />\n\n    {post.comments.length > 0 ? (\n      <CommentList comments={post.comments} />\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ info }) => (\n  <div className=\"PostList\">\n    {info.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUser(id) {\n  return usersFromServer.find(user => (\n    user.id === id\n  )) || null;\n}\n\nfunction getCommentsList(postId) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === postId\n  )) || null;\n}\n\nexport const info = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getCommentsList(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList info={info} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}